============================================
module with no io
============================================

module mod;

endmodule

----

(source_file
  (module_declaration
    (module_header
      (module_keyword)
      (module_identifier (_module_identifier (simple_identifier)))
    )
    (module_ansi_header)
  )
)

============================================
module with empty io
============================================

module mod (); endmodule

----

(source_file
  (module_declaration
    (module_header
      (module_keyword)
      (module_identifier (_module_identifier (simple_identifier)))
    )
    (module_nonansi_header (list_of_ports))
  )
)

============================================
module with empty parameters and empty io
============================================

module mod #()();
endmodule

----

(source_file
  (module_declaration
    (module_header
      (module_keyword)
      (module_identifier (_module_identifier (simple_identifier)))
    )
    (module_nonansi_header
      (parameter_port_list)
      (list_of_ports)
    )
  )
)

============================================
module with parameter and empty io
============================================

module mod #(
  parameter A=5
)();

endmodule

----

(source_file
  (module_declaration
    (module_header
      (module_keyword)
      (module_identifier (_module_identifier (simple_identifier)))
    )
    (module_nonansi_header
      (parameter_port_list
        (parameter_port_declaration (any_parameter_declaration (parameter_declaration (list_of_param_assignments
          (param_assignment
            (parameter_identifier (_parameter_identifier (simple_identifier)))
            (constant_param_expression (constant_mintypmax_expression (constant_expression (constant_primary (primary_literal (number (integral_number)))))))
          )
        ))))
      )
      (list_of_ports)
    )
  )
)

============================================
module with parameters and empty io
============================================

module mod #(
  parameter  A = 5,
  localparam B = 32/4
)();

endmodule

----

(source_file
  (module_declaration
    (module_header
      (module_keyword)
      (module_identifier (_module_identifier (simple_identifier)))
    )
    (module_nonansi_header
      (parameter_port_list
        (parameter_port_declaration (any_parameter_declaration (parameter_declaration (list_of_param_assignments
          (param_assignment
            (parameter_identifier (_parameter_identifier (simple_identifier)))
            (constant_param_expression (constant_mintypmax_expression (constant_expression (constant_primary (primary_literal (number (integral_number)))))))
          )
        ))))
        (parameter_port_declaration (any_parameter_declaration (local_parameter_declaration (list_of_param_assignments
          (param_assignment
            (parameter_identifier (_parameter_identifier (simple_identifier)))
            (constant_param_expression (constant_mintypmax_expression (constant_expression
              (constant_expression (constant_primary (primary_literal (number (integral_number)))))
              (constant_expression (constant_primary (primary_literal (number (integral_number)))))
            )))
          )
        ))))
      )
      (list_of_ports)
    )
  )
)

============================================
empty module with nonANSI io
============================================

module mod (clk);
  input clk;
endmodule

----

(source_file
  (module_declaration
    (module_header (module_keyword)
      (module_identifier (_module_identifier (simple_identifier)))
    )
    (module_nonansi_header
      (list_of_ports
        (port (port_reference (port_identifier (_port_identifier (simple_identifier)))))
      )
    )
    (port_declaration
      (input_declaration
        (list_of_port_identifiers
          (port_identifier (_port_identifier (simple_identifier)))
        )
      )
    )
  )
)

============================================
empty module with nonANSI ios
============================================

module mod (clk, reset_n, inp, a, b);

input clk;
input [W-1:0] inp;
output [3:0] a, b;


endmodule

----

(source_file
  (module_declaration
    (module_header (module_keyword)
      (module_identifier (_module_identifier (simple_identifier)))
    )
    (module_nonansi_header
      (list_of_ports
        (port (port_reference (port_identifier (_port_identifier (simple_identifier)))))
        (port (port_reference (port_identifier (_port_identifier (simple_identifier)))))
        (port (port_reference (port_identifier (_port_identifier (simple_identifier)))))
        (port (port_reference (port_identifier (_port_identifier (simple_identifier)))))
        (port (port_reference (port_identifier (_port_identifier (simple_identifier)))))
      )
    )
    (port_declaration
      (input_declaration
        (list_of_port_identifiers
          (port_identifier (_port_identifier (simple_identifier)))
        )
      )
    )
    (port_declaration
      (input_declaration
        (net_port_type
          (data_type_or_implicit1
            (implicit_data_type1
              (packed_dimension
                (constant_range
                  (constant_expression
                    (constant_expression (constant_primary
                      (ps_parameter_identifier (parameter_identifier))
                    ))
                    (constant_expression (constant_primary
                      (primary_literal (number (integral_number)))
                    ))
                  )
                  (constant_expression (constant_primary
                    (primary_literal (number (integral_number)))
                  ))
                )
              )
            )
          )
        )
        (list_of_port_identifiers
          (port_identifier (_port_identifier (simple_identifier)))
        )
      )
    )
    (port_declaration
      (output_declaration
        (net_port_type
          (data_type_or_implicit1
            (implicit_data_type1
              (packed_dimension
                (constant_range
                  (constant_expression (constant_primary
                    (primary_literal (number (integral_number)))
                  ))
                  (constant_expression (constant_primary
                    (primary_literal (number (integral_number)))
                  ))
                )
              )
            )
          )
        )
        (list_of_port_identifiers
          (port_identifier (_port_identifier (simple_identifier)))
          (port_identifier (_port_identifier (simple_identifier)))
        )
      )
    )
  )
)

============================================
empty module with ANSI io
============================================

module mod (output out);
endmodule

----

(source_file
  (module_declaration
    (module_header (module_keyword) (module_identifier (_module_identifier (simple_identifier))))
    (module_ansi_header (list_of_port_declarations1
      (ansi_port_declaration
        (net_port_header (port_direction))
        (port_identifier (_port_identifier (simple_identifier)))
      )
    ))
  )
)

============================================
module with ANSI ios
============================================

module mod (
  input alfa,
  input [3:0] beta,
  output logic [3:0] gamma
);

endmodule

----

(source_file
  (module_declaration
    (module_header (module_keyword) (module_identifier (_module_identifier (simple_identifier))))
    (module_ansi_header (list_of_port_declarations1
      (ansi_port_declaration
        (net_port_header
          (port_direction))
        (port_identifier (_port_identifier (simple_identifier)))
      )
      (ansi_port_declaration
        (net_port_header
          (port_direction)
          (net_port_type
            (data_type_or_implicit1
              (implicit_data_type1
                (packed_dimension
                  (constant_range
                    (constant_expression
                      (constant_primary
                        (primary_literal (number (integral_number)))
                      )
                    )
                    (constant_expression
                      (constant_primary
                        (primary_literal (number (integral_number)))
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (port_identifier (_port_identifier (simple_identifier)))
      )
      (ansi_port_declaration
        (net_port_header
          (port_direction)
          (net_port_type
            (data_type_or_implicit1
              (data_type
                (integer_vector_type)
                (packed_dimension
                  (constant_range
                    (constant_expression
                      (constant_primary
                        (primary_literal (number (integral_number)))
                      )
                    )
                    (constant_expression
                      (constant_primary
                        (primary_literal (number (integral_number)))
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (port_identifier (_port_identifier (simple_identifier)))
      )
    ))
  )
)
